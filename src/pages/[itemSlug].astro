---
import Layout from "../layouts/Layout.astro";
import Tooltip from "../components/Tooltip.astro";
import BackButton from "../components/BackButton.astro";
import { marked } from "marked";
import { allThings } from "../data";
import { dedent } from "../utils/dedent";
import { getTransitionName } from "../utils/getTransitionName";

export function getStaticPaths() {
    return allThings.map(({ slug }) => ({ params: { itemSlug: slug } }));
}

const { itemSlug } = Astro.params;
const item = allThings.find((thing) => thing.slug === itemSlug);

if (!item) return Astro.redirect("/404");
const { title, description, image, points, pitch, href } = item;

const pitchRender = marked.parse(dedent(pitch ?? ''));
const { transitionNameImage, transitionNameTitle } = getTransitionName(title);
---

<Layout title={title} product={{ description: description, image: image }}>
    <article>
        <h1 transition:name={transitionNameTitle}>
            <BackButton />
            {title}
        </h1>

        <div class="product">
            <div class="product-image">
                <img transition:name={transitionNameImage} src={`/products/${image}`} alt={title} />
            </div>
            <div class="quick-description">
                <div class="text">
                    <p>{description ?? ""}</p>
                    <ul>
                        {points.map((point) => 
                            <li>
                                <img src="/icons/check.svg" alt="check" aria-hidden />
                                <span class="point-text">{point}</span>
                            </li>
                        )}
                    </ul>
                </div>
                <Tooltip title="Not an affiliate link!">
                    <a class="styled" href={href}>Link To Item &nearr;</a>
                </Tooltip>
            </div>
        </div>
        <div class="pitch" set:html={pitchRender} />
    </article>
</Layout>

<style is:global>
    a.styled {
        position: relative;
        text-decoration: none;
    }
    a.styled::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 4px;
        background: linear-gradient(to right, #da62c4, var(--accent));
        border-radius: 5px;
        transform: scaleX(0) scaleY(1.25);
        transition: transform .15s;
    }
    a.styled:hover::after {
        transform: scaleX(1) scaleY(1);
    }

    a {
        color: rgb(198, 49, 153);
    }
</style>

<style>
    h1 {
        margin-bottom: 2rem;
    }
    a {
        color: rgb(198, 49, 153);
    }
    .product {
        display: grid;
        grid-template-columns: 1fr 1fr;
        grid-gap: 2rem;
        align-items: center;
        min-height: 15rem;
    }
    .product .product-image {
        display: flex;
        justify-content: center;
    }
    .product img {
        max-height: 300px;
        max-width: 300px;
    }
    .quick-description {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        align-items: flex-start;
        height: 100%;
    }
    .quick-description a {
        font-size: 2rem;
        text-decoration: none;
        font-weight: bold;
        padding-bottom: 4px;
    }
    .quick-description ul {
        list-style: none;
        display: grid;
        gap: 10px;
    }
    .quick-description ul li {
        display: flex;
        align-items: center;
        gap: 10px;
    }
    .quick-description img {
        height: 24px;
    }
    .text p {
        font-size: 1.3rem;
    }
    .point-icon {
        width: 16px;
        height: 16px;
        border: 3px solid black;
        border-radius: 4px;
        display: grid;
        place-items: center;
    }
    .point-icon span {
        transform: scale(1.8) translate(-2px, -2px);
        display: block;
    }
    .pitch {
        margin-top: 3rem;
        color: #222;
        border-left: 4px solid var(--accent);
        line-height: 1.5rem;
        padding: 1rem;
        position: relative;
    }
    .pitch:after {
        content: '';
        position: absolute;
        top: 0; left: 0;
        width: 100%;
        height: 100%;
        background: var(--accent);
        z-index: -1;
        filter: brightness(120%) hue-rotate(10deg);
        opacity: .06;
    }

    @media screen and (max-width: 650px) {
        .product {
            grid-template-columns: 1fr;
            justify-items: center;
        }
        .pitch {
            margin-top: 1rem;
        }
        .quick-description {
            align-items: center;
            gap: 1rem;
        }
        .quick-description a {
            margin: 1rem 0;
            text-align: center;
        }
    }
</style>
